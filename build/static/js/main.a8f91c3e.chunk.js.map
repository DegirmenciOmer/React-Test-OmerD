{"version":3,"sources":["components/Navbar.js","modules.js","components/Inputs.js","pages/Radar.js","util/getChartUrl.js","pages/Bar.js","App.js","index.js"],"names":["Navbar","to","MODULES","Inputs","props","setHtml","setJS1","setJS2","setJS3","setNode","setDb","setReact","type","onChange","event","target","value","Radar","dataSet","useState","html","Math","floor","random","JS1","JS2","JS3","node","db","react","chartUrl","Array","isArray","Error","chartObject","options","scale","ticks","suggestedMin","suggestedMax","data","labels","datasets","label","JSON","stringify","getRadarChartUrl","alt","src","Bar","barUrl","getBarChartUrl","App","className","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8f91c3e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar() {\n  return (\n    <div>\n      <Link to='/radar'>\n        <button>Radar</button>\n      </Link>\n      <Link to='/bar'>\n        <button>Bar</button>\n      </Link>\n    </div>\n  );\n}\n","const MODULES = ['HTML/CSS', 'JS1', 'JS2', 'JS3', 'NodeJS', 'Databases', 'React'];\n\nexport default MODULES;","import React from \"react\";\n\nexport default function Inputs(props) {\n  const { setHtml, setJS1, setJS2, setJS3, setNode, setDb, setReact } = props;\n\n  return (\n    <div>\n      <div>\n        <span>HTML/CSS</span>\n        <input\n          type=\"number\"\n          onChange={(event) => setHtml(event.target.value)}\n        />\n      </div>\n      <div>\n        <span>JS1</span>\n        <input type=\"number\" onChange={(event) => setJS1(event.target.value)} />\n      </div>\n      <div>\n        <span>JS2</span>\n        <input type=\"number\" onChange={(event) => setJS2(event.target.value)} />\n      </div>\n      <div>\n        <span>JS3</span>\n        <input type=\"number\" onChange={(event) => setJS3(event.target.value)} />\n      </div>\n      <div>\n        <span>NodeJS</span>\n        <input\n          type=\"number\"\n          onChange={(event) => setNode(event.target.value)}\n        />\n      </div>\n      <div>\n        <span>Databases</span>\n        <input type=\"number\" onChange={(event) => setDb(event.target.value)} />\n      </div>\n      <div>\n        <span>React</span>\n        <input\n          type=\"number\"\n          onChange={(event) => setReact(event.target.value)}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { getRadarChartUrl } from \"../util/getChartUrl\";\nimport Inputs from \"../components/Inputs\";\n\nexport default function Radar() {\n  const dataSet = [];\n  const [html, setHtml] = useState(0);\n  dataSet[0] = html;\n  const [JS1, setJS1] = useState(Math.floor(Math.random() * 10));\n  dataSet[1] = JS1;\n  const [JS2, setJS2] = useState(Math.floor(Math.random() * 10));\n  dataSet[2] = JS2;\n  const [JS3, setJS3] = useState(Math.floor(Math.random() * 10));\n  dataSet[3] = JS3;\n  const [node, setNode] = useState(Math.floor(Math.random() * 10));\n  dataSet[4] = node;\n  const [db, setDb] = useState(Math.floor(Math.random() * 10));\n  dataSet[5] = db;\n  const [react, setReact] = useState(Math.floor(Math.random() * 10));\n  dataSet[6] = react;\n\n  const chartUrl = getRadarChartUrl(dataSet);\n\n  return (\n    <div>\n      <Inputs\n        setHtml={setHtml}\n        setJS1={setJS1}\n        setJS2={setJS2}\n        setJS3={setJS3}\n        setNode={setNode}\n        setDb={setDb}\n        setReact={setReact}\n      />\n      <img alt=\"\" src={chartUrl} />\n    </div>\n  );\n}\n","import MODULES from \"../modules\";\n\n/**\n * This function will get the chart url to show in the img tag given the data.\n *\n * dataSet - this needs to be an array of numbers of the same length as the MODULES array (7)\n */\nconst exampleData = [10, 9, 7, 5, 8, 6, 10];\n\nexport const getRadarChartUrl = (dataSet) => {\n  if (!Array.isArray(dataSet)) {\n    throw Error(\"The variable dataSet should be of type Array!\");\n  }\n\n  const chartObject = {\n    type: \"radar\",\n    options: {\n      scale: {\n        ticks: {\n          suggestedMin: 0,\n          suggestedMax: 10,\n        },\n      },\n    },\n    data: {\n      labels: MODULES,\n      datasets: [\n        {\n          label: \"\",\n          data: dataSet,\n        },\n      ],\n    },\n  };\n\n  return `https://quickchart.io/chart?c=${JSON.stringify(chartObject)}`;\n};\n\nexport const getBarChartUrl = (dataSet) => {\n  if (!Array.isArray(dataSet)) {\n    throw Error(\"The variable dataSet should be of type Array!\");\n  }\n\n  const chartObject = {\n    type: \"bar\",\n    data: {\n      labels: MODULES,\n      datasets: [\n        {\n          label: \"\",\n          data: dataSet,\n        },\n      ],\n    },\n  };\n\n  return `https://quickchart.io/chart?c=${JSON.stringify(chartObject)}`;\n};\n","import React, { useState } from \"react\";\nimport Inputs from \"../components/Inputs\";\nimport { getBarChartUrl } from \"../util/getChartUrl\";\n\nexport default function Bar() {\n  const dataSet = [];\n  const [html, setHtml] = useState(0);\n  dataSet[0] = html;\n  const [JS1, setJS1] = useState(Math.floor(Math.random() * 10));\n  dataSet[1] = JS1;\n  const [JS2, setJS2] = useState(Math.floor(Math.random() * 10));\n  dataSet[2] = JS2;\n  const [JS3, setJS3] = useState(Math.floor(Math.random() * 10));\n  dataSet[3] = JS3;\n  const [node, setNode] = useState(Math.floor(Math.random() * 10));\n  dataSet[4] = node;\n  const [db, setDb] = useState(Math.floor(Math.random() * 10));\n  dataSet[5] = db;\n  const [react, setReact] = useState(Math.floor(Math.random() * 10));\n  dataSet[6] = react;\n\n  const barUrl = getBarChartUrl(dataSet);\n  return (\n    <div>\n      <Inputs\n        setHtml={setHtml}\n        setJS1={setJS1}\n        setJS2={setJS2}\n        setJS3={setJS3}\n        setNode={setNode}\n        setDb={setDb}\n        setReact={setReact}\n      />\n      <img alt=\"\" src={barUrl} />\n    </div>\n  );\n}\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Radar from \"./pages/Radar\";\nimport Bar from \"./pages/Bar\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <div className='main-div'>\n          <Switch>\n            <Route exact path='/radar' component={Radar} />\n            <Route path='/bar' component={Bar} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}